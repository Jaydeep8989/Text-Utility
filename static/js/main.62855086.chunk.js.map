{"version":3,"sources":["compontents/Navbar.js","compontents/TextForm.js","compontents/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","Textarea","upcase","toUpperCase","Lpcase","toLowerCase","split","length","Contact","placeholder","alert","App","setMode","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8OAKe,SAASA,EAAOC,GAE3B,OACI,sBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,UACI,sBAAKD,UAAU,kBAAf,UACI,cAAC,IAAD,CAAMA,UAAU,eAAeE,GAAG,IAAlC,SAAuCH,EAAMI,QACzC,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACI,sBAAMJ,UAAU,0BAE5B,qBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,SACA,qBAAIL,UAAU,kCAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOE,GAAG,IAAzD,oBAEJ,oBAAIF,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,WAA9B,kCAMR,sBAAKF,UAAS,+CAAwD,UAAdD,EAAME,KAAgB,OAAO,SAArF,UACI,uBAAOD,UAAU,mBAAmBM,QAASP,EAAMQ,WAAYH,KAAK,WAAWC,GAAG,2BAClF,uBAAOL,UAAU,mBAAmBQ,QAAQ,yBAA5C,oCC1BD,SAASC,EAASV,GAC7B,IAeA,EAAuBW,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KAEA,OACI,qCACA,sBAAKZ,UAAU,YAAYa,MAAO,CAACC,MAAqB,UAAdf,EAAME,KAAgB,UAAU,SAA1E,UACI,6BAAKF,EAAMgB,UACX,qBAAKf,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAegB,MAAOL,EAAME,MAAO,CAACI,gBAA+B,UAAdlB,EAAME,KAAgB,QAAQ,OAAQa,MAAqB,UAAdf,EAAME,KAAgB,UAAU,SAAUiB,SAVtJ,SAACC,GACnBP,EAAQO,EAAMC,OAAOJ,QAS6KX,GAAG,QAAQgB,KAAK,IAA1M,SAA+MtB,EAAMuB,aAEzN,wBAAQtB,UAAU,4BAA4BM,QAxBlC,WAChB,IAAIiB,EAASZ,EAAKa,cAClBZ,EAAQW,IAsBJ,mCACA,wBAAQvB,UAAU,4BAA4BM,QArBlC,WAChB,IAAImB,EAASd,EAAKe,cAClBd,EAAQa,IAmBJ,mCACA,wBAAQzB,UAAU,4BAA4BM,QAlB/B,WAEnBM,EADgB,KAiBZ,oCAGJ,sBAAKZ,UAAU,iBAAiBa,MAAO,CAACC,MAAqB,UAAdf,EAAME,KAAgB,UAAU,SAA/E,UACI,oBAAID,UAAU,SAAd,iDACA,8BAAKW,EAAKgB,MAAM,KAAKC,OAArB,aAAwCjB,EAAKiB,OAA7C,YACA,4BAAI,KAAQjB,EAAKgB,MAAM,KAAKC,SAC5B,2CACA,4BAAIjB,EAAKiB,OAAO,EAAEjB,EAAK,0D,iBClCpB,SAASkB,EAAQ9B,GAI5B,OACI,sBAAKC,UAAU,YAAYa,MAAO,CAACC,MAAqB,UAAdf,EAAME,KAAgB,UAAU,SAA1E,UACI,iCACI,oBAAID,UAAU,OAAOa,MAAO,CAACC,MAAqB,UAAdf,EAAME,KAAgB,UAAU,SAApE,0BAEJ,iCACI,sRAEJ,iCACI,oBAAID,UAAU,OAAd,+BAEJ,qBAAKA,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAeK,GAAG,QAAQgB,KAAK,IAAIS,YAAY,0CAEvE,8BACI,wBAAQ9B,UAAU,4BAA4BM,QAlB5C,WACVyB,MAAM,QAiBE,gCCuBDC,MAhCf,WAEE,MAAwBtB,mBAAS,SAAjC,mBAAOT,EAAP,KAAagC,EAAb,KAWA,OAEE,aADA,CACA,qBACA,eAAC,IAAD,WACE,cAACnC,EAAD,CAAQK,MAAM,cAAcF,KAAMA,EAAMM,WAd1B,WACJ,SAATN,GACDgC,EAAQ,SACRC,SAASC,KAAKtB,MAAMI,gBAAkB,UAEtCgB,EAAQ,QACRC,SAASC,KAAKtB,MAAMI,gBAAkB,cAStC,qBAAKjB,UAAU,iBAAf,SACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,WAAlB,SACE,cAACR,EAAD,CAAS5B,KAAMA,MAEjB,cAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC5B,EAAD,CAAUM,QAAQ,kBAAkBd,KAAMA,EAAMqB,SAAS,0CCzBtDgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFf,SAASgB,eAAe,SAM1BZ,M","file":"static/js/main.62855086.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/contact\">Contact US</Link>\r\n                </li>\r\n            </ul>\r\n           \r\n            </div>\r\n            </div>\r\n            <div className={`form-check pad-left form-switch text-${props.mode=== 'light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark Mode</label>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nNavbar.propTypes = { \r\n    title: PropTypes.string,\r\n    about: PropTypes.string\r\n}\r\n/*Navbar.defaultProps = {\r\n    about: \"About us\"\r\n}*/","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const hadleUpClick =()=>{\r\n        let upcase = text.toUpperCase();\r\n        setText(upcase);\r\n    }\r\n    const hadleLpClick =()=>{\r\n        let Lpcase = text.toLowerCase();\r\n        setText(Lpcase);\r\n    }\r\n    const hadleClearClick =()=>{\r\n        let clearcase = \"\";\r\n        setText(clearcase);\r\n    }\r\n    const handleOnChange =(event)=>{\r\n        setText(event.target.value);    \r\n    }\r\n    const [text,setText] = useState(\"\");\r\n  \r\n    return (\r\n        <>\r\n        <div className=\"contanier\" style={{color: props.mode=== 'light'?'#042743':'white'}}>\r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">         \r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode=== 'light'?'white':'grey', color: props.mode=== 'light'?'#042743':'white'}} onChange={handleOnChange} id=\"mybox\" rows=\"8\">{props.Textarea}</textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1 my-2\" onClick={hadleUpClick}>Convert to upper case</button>\r\n            <button className=\"btn btn-primary mx-1 my-2\" onClick={hadleLpClick}>Convert to lower case</button>\r\n            <button className=\"btn btn-primary mx-1 my-2\" onClick={hadleClearClick}>Clear the text Area</button>\r\n           \r\n        </div>\r\n        <div className=\"contanier my-4\" style={{color: props.mode=== 'light'?'#042743':'white'}}>\r\n            <h3 className=\"header\">Below is the count of word and char</h3>\r\n            <p>{(text.split(\" \").length)} word and {text.length} char.</p>\r\n            <p>{0.008 * text.split(\" \").length}</p>\r\n            <h3>Preview: </h3>\r\n            <p>{text.length>0?text:'Enter the text in text area to show the preview'}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport default function Contact(props) {\r\n   const weldone =()=>{\r\n        alert(\"hii\");\r\n   }\r\n    return (\r\n        <div className=\"contanier\" style={{color: props.mode=== 'light'?'#042743':'white'}}>\r\n            <center>\r\n                <h1 className=\"my-4\" style={{color: props.mode=== 'light'?'#042743':'white'}}>Contact Us</h1>\r\n            </center>\r\n            <center>\r\n                <p>Please feel free to contact Text-Utility.com! We appreciate your feedback in case you have a technical problem, have a suggestion for a new functionality or a change to an existing one, or even if you just want to discuss about something else.</p>\r\n            </center>\r\n            <center>\r\n                <h2 className=\"my-3\">Message details</h2>   \r\n            </center>\r\n            <div className=\"mb-3\">         \r\n                <textarea className=\"form-control\" id=\"mybox\" rows=\"8\" placeholder=\"Please write your valuable feedback\"></textarea>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn btn-primary mx-1 my-2\" onClick={weldone}>Send Feedback</button>                   \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './compontents/Navbar';\nimport TextForm from './compontents/TextForm';\nimport './custom.css';\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  //Link\n} from \"react-router-dom\";\nimport Contact from './compontents/Contact';\n\nfunction App() {\n  \n  const [mode, setMode] = useState('light'); // dark mode\n  const toggleMode =()=>{\n    if(mode === 'dark'){\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n    }else{\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n    }\n  }\n\n  return (\n    /*exact use for exact matching */\n    <>\n    <Router>\n      <Navbar title=\"Text Utiles\" mode={mode} toggleMode={toggleMode}/>\n      <div className=\"container my-3\">\n      <Switch>\n          <Route exact path=\"/contact\"> \n            <Contact mode={mode}/>\n          </Route>\n          <Route exact path=\"/\">\n            <TextForm heading=\"Enter the Text:\" mode={mode} Textarea=\"Enter your content below\"/>\n          </Route>\n        </Switch>\n      </div>\n      </Router>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}